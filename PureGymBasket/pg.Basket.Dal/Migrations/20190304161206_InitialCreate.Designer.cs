// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace pg.Basket.Dal.Migrations
{
    [DbContext(typeof(BasketDbContext))]
    [Migration("20190304161206_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.basketitemseq", "'basketitemseq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:basket.orderseq", "'orderseq', 'basket', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("pg.Basket.Model.BaseVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasketId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("vouchers","basket");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseVoucher");
                });

            modelBuilder.Entity("pg.Basket.Model.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "orderseq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "basket")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.HasKey("Id");

                    b.ToTable("baskets","basket");
                });

            modelBuilder.Entity("pg.Basket.Model.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "basketitemseq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BasketId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("basketItems","basket");
                });

            modelBuilder.Entity("pg.Basket.Model.GiftVoucher", b =>
                {
                    b.HasBaseType("pg.Basket.Model.BaseVoucher");

                    b.ToTable("giftvouchers","basket");

                    b.HasDiscriminator().HasValue("GiftVoucher");
                });

            modelBuilder.Entity("pg.Basket.Model.OfferVoucher", b =>
                {
                    b.HasBaseType("pg.Basket.Model.BaseVoucher");

                    b.ToTable("offervouchers","basket");

                    b.HasDiscriminator().HasValue("OfferVoucher");
                });

            modelBuilder.Entity("pg.Basket.Model.BaseVoucher", b =>
                {
                    b.HasOne("pg.Basket.Model.Basket", "Basket")
                        .WithMany("Vouchers")
                        .HasForeignKey("BasketId");
                });

            modelBuilder.Entity("pg.Basket.Model.BasketItem", b =>
                {
                    b.HasOne("pg.Basket.Model.Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
